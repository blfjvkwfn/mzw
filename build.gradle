buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "war"
apply plugin: 'maven'

group 'mzw'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://central.maven.org/maven2/' }
    mavenCentral()
}
ext {
    set('springCloudVersion', 'Greenwich.RELEASE')
}
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-tomcat')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-test')

    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')

    implementation('com.oracle:ojdbc6:11.2.0.4.0-atlassian-hosted')
    implementation('javax.inject:javax.inject:1')
    implementation('org.apache.tomcat.embed:tomcat-embed-jasper')
    implementation('javax.servlet:javax.servlet-api')
    implementation('javax.servlet:jstl')
    implementation('com.aliyun.oss:aliyun-sdk-oss:2.8.3')
    implementation('commons-io:commons-io:2.6')
    implementation('commons-lang:commons-lang:2.6')
    implementation('commons-collections:commons-collections:3.2.2')
    implementation('commons-beanutils:commons-beanutils:1.9.3')
    implementation('com.alibaba:fastjson:1.2.47')
    implementation('org.apache.logging.log4j:log4j-core:2.11.1')
    implementation('ch.qos.logback:logback-classic:1.2.3')
    implementation('org.projectlombok:lombok:1.18.2')
    implementation('com.github.dozermapper:dozer-core:6.4.1')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.7'
    compile fileTree(dir:'src/main/webapp/WEB-INF/lib',include:"*.jar")
}

task createWrapper(type: Wrapper) {
    gradleVersion = '6.2.2'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task writeNewPom {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
}